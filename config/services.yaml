# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    app.locales: [en,fr,nl]

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php,AppBundle,BisBundle,AuthBundle}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    ## REMOVE LATER
    AppBundle\:
        resource: '../src/AppBundle/*'
        exclude: '../src/AppBundle/{Entity,Repository,Tests}'

    AppBundle\Controller\:
        resource: '../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AuthBundle\:
        resource: '../src/AuthBundle/*'
        exclude: '../src/AuthBundle/{Entity,Repository,Tests}'

    AuthBundle\Controller\:
        resource: '../src/AuthBundle/Controller'
        public: true
        tags: ['controller.service_arguments']
    ## END REMOVE LATER

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    AuthBundle\Security\SHA1PasswordEncoder: ~
    auth.ldap.password_encoder:
        alias: 'AuthBundle\Security\SHA1PasswordEncoder'
        public: true

    AuthBundle\Service\ActiveDirectory:
        arguments: ["@doctrine.orm.bis_entity_manager", '%env(resolve:DOMAIN_CONTROLLERS)%', '%env(resolve:BASE_DN)%', '%env(resolve:ADMIN_USERNAME)%', '%env(resolve:ADMIN_PASSWORD)%']
        public: true

    auth.active_directory:
        alias: AuthBundle\Service\ActiveDirectory
        public: true

    AuthBundle\Service\ActiveDirectoryNotification:
        autowire: true
        arguments:
            $fromAddress: '%env(resolve:NOTIFICATION_FROM)%'
            $toAddress: '%env(resolve:NOTIFICATION_TO)%'
        public: true

    AuthBundle\Service\BisDir:
        arguments: [ '@auth.ldap.password_encoder','%env(resolve:BIS_DIR_HOSTS)%', '%env(resolve:BIS_DIR_BASE_DN)%', '%env(resolve:BIS_DIR_ADMIN_USERNAME)%', '%env(resolve:BIS_DIR_ADMIN_PASSWORD)%']
        public: true

    auth.bis_dir:
        alias: AuthBundle\Service\BisDir
        public: true

    AuthBundle\Security\AdldapAuthenticator:
        arguments: [ "@form.factory", "@doctrine.orm.entity_manager", "@router", "@security.password_encoder", "@auth.active_directory", "@auth.bis_dir"]
        autowire: true
        public: true

    AuthBundle\Doctrine\HashPasswordListener:
        autowire: true
        tags:
            - { name: doctrine.event_subscriber}
        public: true

    auth.doctrine.hash_password_listener:
        alias: AuthBundle\Doctrine\HashPasswordListener
        public: true

    BisBundle\Service\BisPersonView:
        autowire: true
        arguments:
            $em: "@doctrine.orm.bis_entity_manager"
        public: true
