---
- name: CRONTAB | Init
  file:
    path: "/etc/cron.d/ {{ ansistrano_crontab_filename }}"
    state: absent

- name: CRONTAB | SF Disable employees out of contract [12:30am]
  cron:
    name: Disable employees out of contract (12:30am)
    minute: "30"
    hour: "12"
    weekday: "1-5"
    state: present
    user: '{{ ansistrano_crontab_user }}'
    cron_file: '{{ ansistrano_crontab_filename }}'
    job: "{{ release_console_path }} sf:disable-employee --env={{ application_env }} > {{ release_log_path }}/sf_disable_employee.log"
  when: application_env == 'prod'

- name: CRONTAB | AD Sync noon [1 pm]
  cron:
    name: Synchronize person between GO4HR and ActiveDirectory (1pm)
    minute: "0"
    hour: "13"
    weekday: "1-5"
    state: present
    user: '{{ ansistrano_crontab_user }}'
    cron_file: '{{ ansistrano_crontab_filename }}'
    job: "{{ release_console_path }} crontask:synchronize --env={{ application_env }} > {{ release_log_path }}/ad_sync_1PM.log"
  when: application_env == 'prod'

- name: CRONTAB | SF Disable employees out of contract [12:30pm]
  cron:
    name: Disable employees out of contract (12:30pm)
    minute: "30"
    hour: "0"
    weekday: "1-5"
    state: present
    user: '{{ ansistrano_crontab_user }}'
    cron_file: '{{ ansistrano_crontab_filename }}'
    job: "{{ release_console_path }} sf:disable-employee --env={{ application_env }} > {{ release_log_path }}/sf_disable_employee.log"
  when: application_env == 'prod'

- name: CRONTAB | AD Sync morning [1 am]
  cron:
    name: Synchronize person between GO4HR and ActiveDirectory (1am)
    minute: "0"
    hour: "1"
    state: present
    user: '{{ ansistrano_crontab_user }}'
    cron_file: '{{ ansistrano_crontab_filename }}'
    job: "{{ release_console_path }} crontask:synchronize --env={{ application_env }} > {{ release_log_path }}/ad_sync_1AM.log"
  when: application_env == 'prod'

- name: CRONTAB | SF Disable employees out of contract [8am]
  cron:
    name: Disable employees out of contract (8am)
    minute: "0"
    hour: "8"
    weekday: "1-5"
    state: present
    user: '{{ ansistrano_crontab_user }}'
    cron_file: '{{ ansistrano_crontab_filename }}'
    job: "{{ release_console_path }} sf:disable-employee --env={{ application_env }} > {{ release_log_path }}/sf_disable_employee.log"
  when: application_env == 'prod'

- name: CRONTAB | AD Sync morning [6:30 am]
  cron:
    name: Synchronize person between GO4HR and ActiveDirectory (6:30am)
    minute: "30"
    hour: "6"
    state: present
    user: '{{ ansistrano_crontab_user }}'
    cron_file: '{{ ansistrano_crontab_filename }}'
    job: "{{ release_console_path }} crontask:synchronize --env={{ application_env }} > {{ release_log_path }}/ad_sync_630AM.log"
  when: application_env == 'prod'

#- name: CRONTAB | LDAP cleanup [2 am]
#  cron:
#    name: Cleanup entry/person who are no longer in GO4HR (2am)
#    minute: "0"
#    hour: "2"
#    weekday: "1-5"
#    state: absent
#    user: '{{ ansistrano_crontab_user }}'
#    cron_file: '{{ ansistrano_crontab_filename }}'
#    job: "{{ release_console_path }} crontask:ldap --env={{ application_env }} > {{ release_log_path }}/ad_sync_morning.log"
#  when: application_env == 'prod'

- name: Stop sms workers
  command: "{{ release_console_path }} messenger:stop-workers"

- name: CRONTAB | Worker SMS [every 30min]
  cron:
    name:  Consume the sms queue (every 30min)
    minute: "*/30"
    state: present
    user: '{{ ansistrano_crontab_user }}'
    cron_file: '{{ ansistrano_crontab_filename }}'
    job: "{{ release_console_path }} messenger:consume sms --time-limit=1740 --env={{ application_env }} > {{ release_log_path }}/sms_consume.log"
  when: application_env == 'prod'
