<?php

namespace BisBundle\Repository;

use BisBundle\Entity\BisCountry;
use Doctrine\ORM\EntityRepository;

/**
 * BisCountryRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class BisCountryRepository extends EntityRepository
{
    /**
     * Retrieve iso code 2 letters for a country with iso code 3 letters
     *
     * @param string $isoCode3 The iso code 3 letter of the country
     *
     * @return mixed
     *
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getIso2Code($isoCode3)
    {
        $repository = $this->_em->getRepository(BisCountry::class);

        $query = $repository->createQueryBuilder('cou')
            ->where('cou.couIsocode3letters LIKE :code3')
            ->setParameter('code3', $isoCode3)
            ->getQuery();

        /**
         * @var BisCountry|null $country
         */
        $country = $query->getOneOrNullResult();
        if (null !== $country) {
            return $country->getCouIsocode2letters();
        }

        return false;
    }

    /**
     * Retrieve iso code 3 letters for a country with iso code 2 letters
     *
     * @param string $isoCode2 The iso code 2 letter of the country
     *
     * @return mixed
     *
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getIso3Code($isoCode2)
    {
        $repository = $this->_em->getRepository(BisCountry::class);

        $query = $repository->createQueryBuilder('cou')
            ->where('cou.couIsocode2letters LIKE :code2')
            ->setParameter('code2', $isoCode2)
            ->getQuery();

        /**
         * @var BisCountry|null $country
         */
        $country = $query->getOneOrNullResult();
        if (null !== $country) {
            return $country->getCouIsocode3letters();
        }

        return false;
    }
}
